name: Build and Run ChatGPT-Discord-Bot Docker

on:
  push:
    branches:
      - main

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
    environment: Private Server Deploy 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12.3'

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          python -m pytest tests/

      - name: pyupio/safety-action
        uses: pyupio/safety-action@v1.0.1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}

  build-and-push:
    runs-on: ubuntu-latest
    environment: Private Server Deploy 
    needs: tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ghcr.io/coder-vippro/chatgpt-discord-bot:latest
          cache-from: type=gha,scope=pip-dependencies  # Chá»‰ cache dependencies
          cache-to: type=gha,mode=min,scope=pip-dependencies
          github-token: ${{ secrets.GITHUB_TOKEN }}


