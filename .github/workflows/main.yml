name: Build and Deploy ChatGPT-Discord-Bot
on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - 'LICENSE'
      - '.gitignore'
  workflow_dispatch:  # Allow manual triggering

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
    environment: Private Server Deploy 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for better versioning

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12.3'
          cache: 'pip'  # Use built-in pip caching

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov flake8
          pip install -r requirements.txt

      - name: Lint code
        run: |
          # Stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # Exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Run unit tests with coverage
        run: |
          python -m pytest tests/ --cov=src

      - name: Check dependencies for security issues
        uses: pyupio/safety-action@v1.0.1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}

  build-and-push:
    runs-on: ubuntu-latest
    environment: Private Server Deploy 
    needs: tests
    outputs:
      image: ghcr.io/coder-vippro/chatgpt-discord-bot
      version: ${{ steps.version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate version number
        id: version
        run: |
          # Create a version with timestamp and short commit hash
          VERSION=$(date +'%Y%m%d%H%M')-${GITHUB_SHA::7}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "Version: ${VERSION}"

      - name: Set up QEMU for multi-architecture builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          buildkitd-flags: --debug

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: |
            ghcr.io/coder-vippro/chatgpt-discord-bot:latest
            ghcr.io/coder-vippro/chatgpt-discord-bot:${{ steps.version.outputs.version }}
          labels: |
            org.opencontainers.image.title=ChatGPT-Discord-Bot
            org.opencontainers.image.description=Discord bot powered by OpenAI ChatGPT
            org.opencontainers.image.source=https://github.com/coder-vippro/ChatGPT-Discord-Bot
            org.opencontainers.image.created=${{ github.event.repository.updated_at }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
          cache-from: type=gha,scope=build-cache
          cache-to: type=gha,mode=max,scope=build-cache
          github-token: ${{ secrets.GITHUB_TOKEN }}
          build-args: |
            BUILD_DATE=${{ github.event.repository.updated_at }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ steps.version.outputs.version }}

  deploy-notification:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: ${{ success() }}
    steps:
      - name: Send deployment notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "âœ… New deployment successful!"
          description: |
            Image: ${{ needs.build-and-push.outputs.image }}:${{ needs.build-and-push.outputs.version }}
            Commit: ${{ github.sha }}
            Repository: ${{ github.repository }}
          color: 0x00ff00
          username: GitHub Actions


