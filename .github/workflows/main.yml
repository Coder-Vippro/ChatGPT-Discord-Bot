name: Build and Run ChatGPT-Discord-Bot Docker

on:
  push:
    branches:
      - main

jobs:
  # Run unit tests for the project
  CI:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.12.3'
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest
          pip install -r requirements.txt

      - name: Run unit tests
        run: |
          python -m pytest tests/
      
      # Run security check
      - name: pyupio/safety-action
        uses: pyupio/safety-action@v1.0.1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}
  
  # Build and push package to GitHub Container Registry (GHCR)
  build-and-push-to-ghcr:
    runs-on: ubuntu-latest 
    environment: Private Server Deploy
    needs: CI  # This job depends on the CI job
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build the Docker image
        run: |
          IMAGE_NAME=ghcr.io/coder-vippro/chatgpt-discord-bot
          IMAGE_TAG=latest
          docker build -t $IMAGE_NAME:$IMAGE_TAG .

      - name: Push the Docker image
        run: |
          IMAGE_NAME=ghcr.io/coder-vippro/chatgpt-discord-bot
          IMAGE_TAG=latest
          docker push $IMAGE_NAME:$IMAGE_TAG

  # Deploy from GHCR to the main server
  deploy-to-main-server:
    runs-on: self-hosted
    environment: Private Server Deploy  # Specify the deployment environment
    needs: build-and-push-to-ghcr  # This job depends on the GHCR push job
    steps:
      # Step 1: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 2: Stop and remove the previous running container
      - name: Remove old running container
        run: |
          docker rm -f chatgpt-discord-bot || true

      # Step 3: Remove the old image
      - name: Remove old image
        run: |
          IMAGE_NAME=ghcr.io/coder-vippro/chatgpt-discord-bot
          IMAGE_TAG=latest
          docker rmi $IMAGE_NAME:$IMAGE_TAG || true

      # Step 4: Pull and Run Docker container from GHCR
      - name: Pull and Run Docker container from GHCR
        run: |
          IMAGE_NAME=ghcr.io/coder-vippro/chatgpt-discord-bot
          IMAGE_TAG=latest
          
          # Pull the latest image from GHCR
          docker pull $IMAGE_NAME:$IMAGE_TAG
      
          # Run the new container with the latest image
          docker run -d --name chatgpt-discord-bot \
            -e DISCORD_TOKEN=${{ secrets.DISCORD_TOKEN }} \
            -e OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} \
            -e RUNWARE_API_KEY=${{ secrets.RUNWARE_API_KEY }} \
            -e GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }} \
            -e GOOGLE_CX=${{ secrets.GOOGLE_CX }} \
            -e OPENAI_BASE_URL=${{ secrets.OPENAI_BASE_URL }} \
            -e MONGODB_URI=${{ secrets.MONGODB_URI }} \
            $IMAGE_NAME:$IMAGE_TAG