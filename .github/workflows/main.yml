name: Build and Deploy ChatGPT-Discord-Bot
on:
  workflow_dispatch:

jobs:
  tests:
    runs-on: ubuntu-latest
    env:
      MONGODB_URI: ${{ secrets.MONGODB_URI }}
    environment: Private Server Deploy
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Set up Python
        uses: actions/setup-python@v5.3.0
        with:
          python-version: '3.13.2'
          cache: 'pip' 

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov flake8
          pip install -r requirements.txt

      - name: Run unit tests with coverage
        run: |
          python -m pytest tests/ --cov=src

      - name: Check dependencies for security issues
        uses: pyupio/safety-action@v1.0.1
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}

  build-amd64:
    runs-on: ubuntu-latest
    environment: Private Server Deploy
    needs: tests
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for amd64
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/amd64
          tags: ghcr.io/coder-vippro/chatgpt-discord-bot:latest-amd64

  build-arm64:
    runs-on: ubuntu-24.04-arm
    environment: Private Server Deploy
    needs: tests  
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image for arm64
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          platforms: linux/arm64
          tags: ghcr.io/coder-vippro/chatgpt-discord-bot:latest-arm64

  merge-manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push multi-arch manifest
        run: |
          docker buildx imagetools create -t ghcr.io/coder-vippro/chatgpt-discord-bot:latest \
            ghcr.io/coder-vippro/chatgpt-discord-bot:latest-amd64 \
            ghcr.io/coder-vippro/chatgpt-discord-bot:latest-arm64

  deploy-notification:
    runs-on: ubuntu-latest
    needs: merge-manifest
    if: ${{ success() }}
    steps:
      - name: Send deployment notification
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "âœ… New deployment successful!"
          description: |
            Image: ${{ needs.build-and-push.outputs.image }}:${{ needs.build-and-push.outputs.version }}
            Commit: ${{ github.sha }}
            Repository: ${{ github.repository }}
          color: 0x00ff00
          username: GitHub Actions
